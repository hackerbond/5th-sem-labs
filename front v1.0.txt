[[SOLAR PLANET BOOTSTRAP]]


index.html

<!DOCTYPE html>
<html ng-app="planetApp">
<head>
  <meta charset="UTF-8">
  <title>Planets in the Solar System</title>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js"></script>
  <script src="script.js"></script>
</head>
<body ng-controller="planetController">
 <div class="container">
   <h1>Planets in the Solar System</h1>
    <div class="row">
   <div class="col-md-3">
 <input type="text" ng-model="searchTerm" class="form-control" placeholder="Search Planets...">
      </div>
      <div class="col-md-3">
        <select class="form-control" ng-model="sortBy" ng-init="sortBy='name'">
          <option value="name">Name</option>
          <option value="type">Type</option>
          <option value="distance">Distance</option>
          <option value="moons">Number of Moons</option>
        </select>
      </div>
    </div>
    <table class="table table-striped table-hover">
      <thead>
        <tr>
          <th>Name</th>
          <th>Type</th>
          <th>Distance (AU)</th>
          <th>Number of Moons</th>
        </tr>
      </thead>
      <tbody>
        <tr ng-repeat="planet in planets | filter:searchTerm | orderBy:sortBy">
          <td>{{ planet.name }}</td>
          <td>{{ planet.type }}</td>
          <td>{{ planet.distance }}</td>
          <td>{{ planet.moons }}</td>
        </tr>
      </tbody>
    </table>
  </div>
</body>
</html>


script.js

angular.module('planetApp', [])
  .controller('planetController', function($scope) {
    $scope.planets = [
      { name: 'Mercury', type: 'Terrestrial', distance: 0.39, moons: 0 },
      { name: 'Venus', type: 'Terrestrial', distance: 0.72, moons: 0 },
      { name: 'Earth', type: 'Terrestrial', distance: 1.00, moons: 1 },
      { name: 'Mars', type: 'Terrestrial', distance: 1.52, moons: 2 },
      { name: 'Jupiter', type: 'Gas Giant', distance: 5.20, moons: 79 },
      { name: 'Saturn', type: 'Gas Giant', distance: 9.58, moons: 82 },
      { name: 'Uranus', type: 'Ice Giant', distance: 19.18, moons: 27 },
      { name: 'Neptune', type: 'Ice Giant', distance: 30.07, moons: 14 }
    ];
  });












[[EMPL DETAILS AGE VALIDATOR]]


regist.html

<!DOCTYPE html><html><head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>replit</title>
  <link href="style.css" rel="stylesheet" type="text/css" />
</head>
<body bgcolor="lightblue"> 
  <center><H1> ****** Employee Basic Details ******</H1></center><hr>
  <form>
      <label for="name">Name:</label>
      <input type="text" id="name" name="name" required /><br><br>
      <label for="dob">Date of Birth:</label>
      <input type="date" id="dob" name="dob" required /><br><br>
      <div id="age-range">
        <label for="age">Age:</label>
        <input type="range" id="age" name="age" min="18" max="100" />   <br><br>
        <span class="age-value">  </span>
      </div>
      <div id="email-group">
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required /><br><br>
      </div>
      <div id="website-group">
        <label for="website">Website:</label>
        <input type="url" id="website" name="website" /><br><br>
      </div>
      <button type="submit">Sign Up</button>
    </form>
  <script src="script.js"></script>
</body>
</html>


script.js

const ageRange = document.getElementById('age-range');
      const emailGroup = document.getElementById('email-group');
      const websiteGroup = document.getElementById('website-group');
      ageRange.style.display = 'none';
      emailGroup.style.display = 'none';
      websiteGroup.style.display = 'none';
      document.getElementById('dob').addEventListener('change', function () {
        const age = calculateAge(this.value);
        if (age < 18) {
          ageRange.style.display = 'none';
          emailGroup.style.display = 'none';
          websiteGroup.style.display = 'none';
        } else if (age >= 18 && age <= 25) {
          ageRange.style.display = 'block';
          emailGroup.style.display = 'block';
          websiteGroup.style.display = 'none';
        } else {
          ageRange.style.display = 'block';
          emailGroup.style.display = 'block';
          websiteGroup.style.display = 'block';
        }
        // display age 
        ageRange.querySelector('.age-value').innerHTML = age;
        ageRange.querySelector('input').value = age;
      });
      // inline validation
      document.querySelectorAll('input[required]').forEach((input) => {
        input.addEventListener('invalid', function () {
          this.setCustomValidity('Please fill out this field.');
        });
        input.addEventListener('input', function () {
          this.setCustomValidity('');
        });
      });
      // helper function to calculate age from date of birth
      function calculateAge(birthday) {
        const today = new Date();
        const birthDate = new Date(birthday);
        let age = today.getFullYear() - birthDate.getFullYear();
        return age;
      }











[MODULES ANG JS [CONTROLL,EXPRESS,DIRECT,MODULE,NGMODEL,TWOWAYMODEL]]


index.html

<!DOCTYPE html>
<html lang="en-US">
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js"></script>
<head>
  <style>
    .doo {
      font-family: sans-serif;
      font-weight: bold;
    }
    .doo h2 {
      color: coral;
    }
  </style>
</head>
<body>
  <div class="doo">
    <center>
      <h2>Click on any Module</h2>
    </center>
    <a href="Expression.html">
      <h3>->> Expression</h3>
    </a>
    <a href="Module.html">
      <h3>->> Module</h3>
    </a>
    <a href="Controller.html">
      <h3>->> Controller</h3>
    </a>
    <a href="Directory.html">
      <h3>->> Directory</h3>
    </a>
    <a href="ngmodel.html">
      <h3>->> Ngmodel</h3>
    </a>
    <a href="TwowayModel.html">
      <h3>->> TwowayModel</h3>
    </a>
  </div>
</body>
</html>


controller.html

<html>
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js"></script>
<body>
  <div ng-app="myApp" ng-controller="myCtrl">
    First Name:<input type="text" ng-model="firstname"><br>
    Last Name:<input type="text" ng-model="lastname"><br>
    <br>
    Full Name:{{firstname+" "+lastname}}
  </div>
  <script>
    var app = angular.module('myApp', []);
    app.controller('myCtrl', function ($scope) {
      $scope.firstname = "John";
      $scope.lastname = "Doe";
    });
  </script>
</body>
</html>


directory.html

<html>
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js"></script>
  <body>
    <div data-ng-app=""data-ng-init="quantity=9;price=125">
      <h2 style="color:Orange">Cost Calculator</h2>
      Quantity: <input type="number" ng-model="quantity">
      Price=<input type="number" ng-model="price">
      <p><b>Total in rupess:</b>{{quantity*price}}</p>
    </div>
  </body>
</html>


express.html

<!DOCTYPE html>
<html>
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js"></script>
<body>
  <div ng-app>
    <p> Example Expression:{{10+5}}</p>
    <div ng-app="" ng-init="firstName=' HARISH ';lastName='Kumar Reddy'">
      <p>The Complete name is:{{firstName+""+lastName}}</p>
    </div>
    <div ng-app="" ng-init="quantity=3;cost=100">
      <p>Total amount in rupees:<span ng-bind="quantity*cost"></span></p>
    </div>
    <div ng-app="" ng-init="person={firstName:'HARISH',lastName:'KUMAR REDDY'}">
      <p>The First Name is {{person.firstName}}</p>
    </div>
    <div ng-app="" ng-init="points=[11,25,13,12,130]">
      <p>The Second result is <span ng-bind="points[1]"></span></p>
    </div>
</body>
</html>


module.html

<html>
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js"></script>
<body>
  <div ng-app="myApp" ng-controller="myCtrl">
    {{firstName+""+lastName}}
  </div>
  <script>
    var app = angular.module("myApp", []);
    app.controller("myCtrl", function ($scope) {
      $scope.firstName = "Laya";
      $scope.lastName = "Babu";
    });
  </script>
</body>
</html>


ngmodel.html

<html>
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js"></script>
<body>
  <div ng-app="myApp" ng-controller="myCtrl">
    Name:<input ng-model="name">
  </div>
  <script>
    var app = angular.module("myApp", []);
    app.controller("myCtrl", function ($scope) {
      $scope.name = "Laya Babu";
    });
  </script>
  <p>Use the ng-model directive to bind the value of the input field to a property made in the controller</p>
</body>
</html>


twowaymodel.html

<html>
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js"></script>
<body>
  <div ng-app="myApp" ng-controller="myCtrl">
    Name:<input ng-model="firstname">
    <h1>{{firstname}}</h1>
  </div>
  <script>
    var app = angular.module('myApp', []);
    app.controller('myCtrl', function ($scope) {
      $scope.firstname = "John";
      $scope.lastname = "Doe";
    });
  </script>
  <p>Chane the name inside the input field and the model data will change automatically,and therefore also the header
    will change its value</p>
</body>
</html>









[[REACTJS INC COMP INTO ANO,CALCULATOR,ADD NAME LIST]]



index.html

<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8" />
  <title>Program 2</title>
  <script src="https://unpkg.com/react@18/umd/react.development.js"></script>
  <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
  <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
</head>
<body>
  <h1>Learn how to include one component in another</h1>
  <div id="root"></div>
  <script type="text/babel">
    const {useState} = React;
    function MyButton(props) {
      return <button>I'm a button. {props.text}</button>;
    }
    function MyInput(props) {
      return <input onChange={() => props.setText(event.target.value)} />;
    }
    function MyApp() {
      const [text, setText] = useState("");
      return (
        <div>
          <h2>Welcome to my application</h2>
          <h3>Type some content in the Textarea</h3>
          <MyButton text={text} />
          <MyInput setText={setText} />
        </div>
      );
    }
    const container = document.getElementById("root");
    const root = ReactDOM.createRoot(container);
    root.render(<MyApp />);
  </script>
</body>
</html>









[CALCULATOR]



calc.html


<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8" />
<title>Program 4</title>
<script
src="https://unpkg.com/react@18/umd/react.development.js"></script>
<script
src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
<script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
</head>
<body>
<div id="root"></div>
<script type="text/babel">
const { useState } = React;
function Calculator() {
const [firstNumber, setFirstNumber] = useState(0);
const [secondNumber, setSecondNumber] = useState(0);
const [result, setResult] = useState(0);
return (
<>
<h1>Calculator</h1>
<input type='number' value={firstNumber} onChange={(e) =>
setFirstNumber(parseInt(e.target.value))} />
<input type='number' value={secondNumber} onChange={(e) =>
setSecondNumber(parseInt(e.target.value))} />
<button onClick={() => setResult(firstNumber +
secondNumber)}>Add</button>
<button onClick={() => setResult(firstNumber -
secondNumber)}>Subtract</button>
<button onClick={() => setResult(firstNumber *
secondNumber)}>Multiply</button>
<button onClick={() => setResult(firstNumber / 
secondNumber)}>Divide</button>
<h2>Result: {result}</h2>
</>
);
}
const container = document.getElementById('root');
const root = ReactDOM.createRoot(container);
root.render(<Calculator />);
</script>
</body>
</html>




[ADD NAME]



namelist.html


<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8" />
<title>Program 5</title>
<script
src="https://unpkg.com/react@18/umd/react.development.js"></script>
<script
src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
<script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
</head>
<body>
<div id="root"></div>
<script type="text/babel">
const { useState, useEffect } = React;
function NamesList() {
const [names, setNames] = useState([]);
useEffect(() => {
fetch('https://randomuser.me/api/?results=10')
.then((response) => response.json())
.then((data) => {
setNames(data.results);
});
}, []);
const addName = () => {
fetch('https://randomuser.me/api/')
.then((response) => response.json())
.then((data) => {
setNames([...names, ...data.results]);
});
};
return (
<>
<h1>Names List</h1>
<button onClick={addName}>Add Name</button>
<ul>
{names.map((name) => (
<li key={name.login.uuid}>
{name.name.first} {name.name.last}
</li>
))}
</ul>
</>
);
}
const container = document.getElementById('root');
const root = ReactDOM.createRoot(container);
root.render(<NamesList />);
</script>
</body>
</html>











[[IMAGE GRID BOOTSTRAP RESP LAYOUT]]



index.html


<!DOCTYPE html>
<html>
<head>
  <style>
    img {
      height: 100%;
    }
    .wrapper {
      max-width: 800px;
    }
  </style>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>replit</title>
  <link href="style.css" rel="stylesheet" type="text/css" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
    crossorigin="anonymous"></script>
</head>
<center>
  <h1 style="color: saddlebrown;font-weight: bold;">Nature</h1>
</center>
<body class="bg-light">
  <div class="wrapper mx-auto py-4">
    <div class="container">
      <div class="row">
        <div class="col-md-8 pb-4">
          <img class="d-block w-100 object-fit-fill" src="nature1.jpg">
        </div>
        <div class="col-12 col-md-4 pb-4">
          <img class="d-block w-100 object-fit-fill" src="nature2.jpg">
        </div>
      </div>
      <div class="row">
        <div class="col-6 col-md-4 pb-4">
          <img class="d-block w-100 object-fit-cover" src="nature3.jpg">
        </div>
        <div class="col-6 col-md-4 pb-4">
          <img class="d-block w-100 object-fit-cover" src="nature4.jpg">
        </div>
        <div class="col-12 col-md-4 pb-4">
          <img class="d-block w-100 object-fit-cover" src="nature5.jpg">
        </div>
      </div>
      <div class="row">
        <div class="col-6 pb-4">
          <img class="d-block w-100 object-fit-cover" src="nature6.jpg">
        </div>
        <div class="col-6 pb-4">
          <img class="d-block w-100 object-fit-cover" src="nature7.jpg">
        </div>
      </div>
    </div>
  </div>
</body>
</html>









[[CANVAS]]



canv.html


<html><head>   <style>
      canvas {
      border: 2px solid red;
      background-color:yellow;
color:white;
font-size:3px;
    }
    body{
      background-color: green;
      color:white;
    }
  </style></head>
<body>
  <center>
  <header>
    <h1>Canvas Example</h1>
    <p>Draw on the canvas by clicking and dragging the mouse</p>
  </header>
  <article>
    <h2>Canvas</h2>
    <canvas id="mycanvas"       
      width="500"       
      height="400"       
      onmousedown="startDrawing(event)"       
      onmousemove="drawLine(event)"  
      onmouseup="stopDrawing(event)">
      </canvas>
  </article>
  <script>
    var canva = document.getElementById("mycanvas");
    var line = canva.getContext("2d");
    var isDrawing = false;
    function startDrawing(event) {
      isDrawing = true;
      var x = event.clientX - canva.offsetLeft;
      var y = event.clientY - canva.offsetTop;
      line.beginPath();
      line.moveTo(x, y);
    }
    function drawLine(event) {
      if (isDrawing) {
        var x = event.clientX - canva.offsetLeft;
        var y = event.clientY - canva.offsetTop;
        line.lineTo(x, y);
        line.stroke();
      }
    }
    function stopDrawing(event) {
      isDrawing = false;
    }
  </script></center>
 </body>
</html>










[[FIBONASSI,SQR]]



fib.html


<html>
<head>
   <title>Fibonacci Series</title>
</head>
<body>
  <script type="text/javascript">
    var fib1 = 0, fib2 = 1, fib = 0;
    var num = prompt("Enter a Number:\n");
    if (num != null && num > 0) {
      document.write("<h1>The first " + num + " numbers in the fibonacci series</h1>");
      if (num == 1) {
        document.write("<h2>" + fib1 + "</h2>");
       } 
      else {
        document.write("<h2>" + fib1 + "</h2>");
        document.write("<h2>" + fib2 + "</h2>");
      }
      for (i = 3; i <= num; i++) {
        fib = fib1 + fib2;
        document.write("<h2>" + fib + "</h2>");
        fib1 = fib2;
        fib2 = fib;
      }
    }
    else
      alert("Invalid Input");
  </script>
</body>
</body>
</html>




sqr.html


<html>
<head>
  </head>
  <script type="text/javascript">
    var num = prompt("Enetr a number:\n", "");
    var sqr;
    if ( num != null && num > 0 ) {
      sqr = "Number and its Square are in \n";
      for (i = 1; i <=num; i++) {
        sqr = sqr + i + "^2=" + i * i + "\n";
      }
      alert(sqr);
document.write(sqr );
    }
    else {
      alert("Invalid Input");
document.write("invalid");
}
  </script>
  </body> 
</html>









[[RSVP REGISTRATION FRM BOOTSTRAP]]



index.html


<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>replit</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
  <link href=<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script> />
</head>
<body class="bg-success">
  <div class="container-sm">
    <main>
      <div class="py-10 text-center">
        <h1> RSVP form</h1>
        <p class="lead"> Using Bootstrap to create a RSVP form </p>
      </div>
      <div
        <div class="my-4">
        <form class="need-validation" novalidate>
          <div class="row g-3">
            <div class="col-sm-6">
              <label for ="FIRSTNAME" calss="formlabel">FirstNmae</label>
              <input type ="text" class="form-control" id="firstname" placeholder=""value="" required>
              <div class="invalid-feedback"> valid first name is required</div>
            </div>
          <div class="col-sm-6">
            <label for="LastName" class="form-label">LastName</label>
             <input type ="text" class="form-control" id="LastNAme" placeholder=""value="" required>
            <div class="invalid-feedback"> valid lat name is required</div>
          </div>
            <div class="col-sm-6">
            <label for="email" class="form-label">Email</label>
             <input type ="email" class="form-control" id="email" placeholder="you@example.com" required>
            <div class="invalid-feedback"> Please enter a valid email address</div>
          </div>
            <div class="col-sm-6">
            <label for="phone" class="form-label">Phone Number <span class="text-mutted"></span></label>
             <input type ="tel" class="form-control" id="hone" pattern="[0-9]{10,12}" required>
            <div class="invalid-feedback"> Please enter a valid Phone number</div>
          </div>
            <div class="col-md-5">
            <label for="country" class="form-label">Country </label>
              <select class="form-select" id="country" required>
                <option value="">Choose..</option>
                <option>India</option>
              </select>
              <div class="invalid-feedback">
            PLease select a valid country
            </div>
            </div>
        <div class="col-md-4">
            <label for="state" class="form-label">State </label>
              <select class="form-select" id="state" required>
                <option value="">Choose..</option>   
                 <option>Andhra Pradesh</option>
              </select>
              <div class="invalid-feedback">
            PLease select a valid state
            </div>
        </div>
            <div class="col-md-3">
            <label for="zip" class="form-label">Zip </label>
              <input type ="text" class="form-control" id="zip" placeholder="" required>
              <div class="invalid-feedback">
            ZIP code required
            </div>
            </div>
            <div class="form-check">
              <h3> Will you attend</h3>
              <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault1" checked>
              <label class="form-check-label" for="flexRadioDefault1"> Yes </label>
            </div>
             <div class="form-check">
               <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault2" checked>
              <label class="form-check-label" for="flexRadioDefault2"> NO </label>
            </div>
            <div class="col-md-3">
             <label for="plus"> And with how many guests?</label><br>
               <select class="form-select" aria-label="Default select example">            
                  <option value="1">Zero</option>   
                  <option value="2">one</option>   
                  <option value="3">second</option>   
                  <option value="4">Three</option>
               </select>
            </div>
            <div class="form-group">
              <label for="textarea" class="form-label"> Addition Comments</label>
              <textarea class="form-control" id="textarea"rowa="8"></textarea>
            </div>
            <hr class="my-4">
            <button class="w-100 btn btn-primary btn-lg" type="submit">Submit</button>
          </div></form></div>         
    </main>
  </div>
  <script src="https://replit.com/public/js/replit-badge-v2.js" theme="dark" position="bottom-right"></script>
</body>
</html>



script.js


(function() {
  'use strict'
  var forms = document.querySelectorAll('.needs-validation')
  Array.prototype.slice.call(forms)
    .forEach(fumction(form){
      form.addEventListener('submit', function(event) {
        if (!form.checkValidity()) {
          event.preventDefault()
          event.stopPropagtion()
        }
        form.classList.add('was-validated')
      }, false)
    })
})()